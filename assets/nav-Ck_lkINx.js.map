{"version":3,"mappings":"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","names":["breakPoint","aside","name","template","__vitePreload","import","__VITE_PRELOAD__","data","loading","user","empresa","drawer","menu","init","console","log","this","getAuthenticatedUser","getCompanyGlobalData","empOmi","async","cacheKey","cached","window","cache","get","r","fetch","url","credentials","ok","Error","t","status","json","length","loadConfig","defaultMenu","map","item","route","toLowerCase","replace","set","getMenuItems","error","location","href","Drawer","$refs","drawerNavigation","placement","backdrop","bodyScrolling","edge","edgeOffset","onHide","onShow","onToggle","$nextTick","innerWidth","_a","show","_b","isVisible","onresize","hide","addEventListener","DRAWER_TOGGLE","e","detail","toggle","avatar","img","has","imageUrl","usuario","defaultImageUrl","nombre","nav","render","configureUserDropdown","logout","$router","navigate","Dropdown","dropdown","dropdownTrigger","triggerType","offsetSkidding","offsetDistance","delay","ignoreClickOutsideClass"],"ignoreList":[],"sources":["../../src/services/menu.service.ts","../../src/components/shared/aside/aside.ts","../../src/components/shared/avatar/avatar.ts","../../src/components/shared/nav/nav.ts"],"sourcesContent":["import { Item } from '@/models/menu';\nimport { loadConfig } from '@/services/config.service';\nimport { url } from './api.service';\nimport { t } from './locale.service';\n\nexport const getMenuItems = async (): Promise<Item[]> => {\n    const cacheKey = '_menuItems';\n    const cached = window.cache.get(cacheKey);\n    if (cached) {\n        console.log('getMenuItems@cache', cached);\n        return cached as Item[];\n    }\n    console.log('getMenuItems@fetch');\n\n    const r = await fetch(url('/isiWeb/web/v1/menu'), {\n        credentials: 'include',\n    });\n\n    if (!r.ok) {\n        throw new Error(t(`Menu response status not OK: ${r.status}`));\n    }\n\n    const response = await r.json();\n    let menu: Item[] = response.data as Item[];\n\n    if (menu.length === 0) {\n        menu = loadConfig().aside.defaultMenu;\n    }\n\n    // TEMP: replace presunto with potencial and modify with list\n    menu = menu.map((item) => {\n        if (item.route) {\n            item.route = item.route.toLowerCase().replace('presunto', 'potencial').replace('modify', 'list');\n        }\n\n        return item;\n    });\n    // END TEMP\n\n    window.cache.set(cacheKey, menu);\n    console.log('getMenuItems@cache set', menu);\n\n    return menu;\n};\n","import { ComponentModule } from '@/main';\nimport { Empresa } from '@/models/empresa';\nimport { DRAWER_TOGGLE } from '@/models/events';\nimport { Item } from '@/models/menu';\nimport { User } from '@/models/user';\nimport { getCompanyGlobalData } from '@/services/api.service';\nimport { getAuthenticatedUser } from '@/services/auth.service';\nimport { getMenuItems } from '@/services/menu.service';\nimport { Drawer } from 'flowbite';\n\nconst breakPoint = 1024;\n\nexport default {\n    name: () => 'aside',\n    template: () => import('./aside.html?raw'),\n    data: () => ({\n        loading: false,\n        user: null as User | null,\n        empresa: null as Empresa | null,\n        drawer: null as Drawer | null,\n        menu: [] as Item[],\n        async init() {\n            console.log('aside@init');\n\n            try {\n                this.user = await getAuthenticatedUser();\n                this.empresa = await getCompanyGlobalData(this.user.empOmi);\n                this.menu = await getMenuItems();\n            } catch (error) {\n                location.href = '/login';\n            }\n\n            this.drawer = new Drawer(this.$refs.drawerNavigation, {\n                placement: 'left',\n                backdrop: false,\n                // backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-30',\n                bodyScrolling: true,\n                edge: false,\n                edgeOffset: '',\n                onHide: () => {\n                    console.log('drawer is hidden');\n                },\n                onShow: () => {\n                    console.log('drawer is shown');\n                },\n                onToggle: () => {\n                    console.log('drawer has been toggled');\n                },\n            });\n\n            this.$nextTick(() => {\n                if (window.innerWidth >= breakPoint) {\n                    this.drawer?.show();\n                }\n\n                console.log('aside drawer visible status', this.drawer?.isVisible());\n\n                window.onresize = () => {\n                    if (window.innerWidth >= breakPoint) {\n                        this.drawer?.show();\n                    }\n\n                    if (window.innerWidth < breakPoint) {\n                        this.drawer?.hide();\n                    }\n                };\n\n                // @ts-expect-error 2769\n                window.addEventListener(DRAWER_TOGGLE, (e: CustomEvent) => {\n                    if (e.detail === 'drawerNavigation') {\n                        this.drawer?.toggle();\n                    }\n                });\n            });\n        },\n    }),\n} as ComponentModule;\n","import { ComponentModule } from '@/main';\nimport { User } from '@/models/user';\nimport { url } from '@/services/api.service';\nimport { getAuthenticatedUser } from '@/services/auth.service';\n\nexport default {\n    name: () => 'avatar',\n    template: () => import('./avatar.html?raw'),\n    data: () => ({\n        loading: false,\n        user: null as User | null,\n        img: 'https://ui-avatars.com/api/?size=1&color=fff&background=fff',\n        async init() {\n            console.log('avatar@init');\n\n            try {\n                this.user = await getAuthenticatedUser();\n            } catch (error) {\n                return;\n            }\n\n            const cacheKey = '_avatarUrl';\n\n            if (window.cache.has(cacheKey)) {\n                this.img = window.cache.get(cacheKey);\n                return;\n            }\n\n            const imageUrl = url(`/isiWeb/web/v1/profile-image?user=${this.user.usuario}`);\n            const defaultImageUrl = `https://ui-avatars.com/api/?size=48&color=ed772d&background=ffffff&name=${this.user.nombre}`;\n\n            try {\n                const r = await fetch(imageUrl, {\n                    credentials: 'include',\n                });\n\n                this.img = r.ok ? imageUrl : defaultImageUrl;\n                window.cache.set(cacheKey, this.img);\n            } catch (error: any) {\n                this.img = defaultImageUrl;\n                window.cache.set(cacheKey, this.img);\n            }\n        },\n    }),\n} as ComponentModule;\n","import avatar from '@/components/shared/avatar/avatar';\nimport { ComponentModule, render } from '@/main';\nimport { Empresa } from '@/models/empresa';\nimport { User } from '@/models/user';\nimport { getCompanyGlobalData } from '@/services/api.service';\nimport { getAuthenticatedUser, logout } from '@/services/auth.service';\nimport { Dropdown } from 'flowbite';\n\nexport default {\n    name: () => 'nav',\n    template: () => import('./nav.html?raw'),\n    data: () => ({\n        loading: false,\n        avatar: null as string | null,\n        user: null as User | null,\n        empresa: null as Empresa | null,\n        async init() {\n            console.log('nav@init');\n\n            try {\n                this.user = await getAuthenticatedUser();\n                this.empresa = await getCompanyGlobalData(this.user.empOmi);\n            } catch (error) {\n                location.href = '/login';\n            }\n\n            this.avatar = await render(avatar);\n\n            this.configureUserDropdown();\n        },\n        async logout() {\n            console.log('nav@logout');\n            this.loading = true;\n\n            try {\n                await logout();\n                this.$router.navigate('/login');\n            } catch (error: any) {\n                console.error('Error logging out', error);\n            }\n\n            this.loading = false;\n        },\n        configureUserDropdown() {\n            new Dropdown(this.$refs.dropdown, this.$refs.dropdownTrigger, {\n                placement: 'bottom',\n                triggerType: 'click',\n                offsetSkidding: 0,\n                offsetDistance: 10,\n                delay: 300,\n                ignoreClickOutsideClass: false,\n                onHide: () => {\n                    console.log('dropdown has been hidden');\n                },\n                onShow: () => {\n                    console.log('dropdown has been shown');\n                },\n                onToggle: () => {\n                    console.log('dropdown has been toggled');\n                },\n            });\n        },\n    }),\n} as ComponentModule;\n"],"file":"assets/nav-Ck_lkINx.js"}