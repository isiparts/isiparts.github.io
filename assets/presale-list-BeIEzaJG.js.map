{"version":3,"mappings":"2sDAWA,MAAeA,EAAA,CACXC,KAAM,IAAM,cACZC,SAAU,IAAMC,GAAA,IAAAC,OAAO,+BAAyBC,IAChDC,KAAM,KAAO,CACTC,KAAM,KACNC,QAAS,KACTC,IAAK,KACLC,MAAO,KACPC,SAAS,EACTC,SAAU,KACVC,WAAY,KAEZC,mBAAoB,KACpBC,eAAgB,GAChBC,kBAAmB,oCACnBC,SAAU,GAEVC,cAAe,MACfC,UAAW,OAEXC,YAAa,EAEbC,WAAY,EAEZ,YAAAC,CAAaC,SACH,MAAAC,EAAW,OAAAC,OAAKZ,iBAAL,EAAAY,EAAiBC,MAAMC,GAAgBA,EAAEJ,MAAQA,IAClE,aAAOC,WAAUI,MAAO,EAC5B,EAEA,UAAMC,GACFC,QAAQC,IAAI,oBAER,IACKC,KAAAzB,WAAa0B,IAClBD,KAAKxB,cAAgB0B,EAAqBF,KAAKzB,KAAK4B,cAC/CC,GACLC,SAASC,KAAO,kCAGfN,KAAAvB,UAAY8B,EAAO9B,GACnBuB,KAAAtB,YAAc6B,EAAO7B,GAE1BsB,KAAKrB,SAAU,EAEfqB,KAAKjB,eAAiByB,aAAaC,QAAQT,KAAKhB,oBAAsB,SAEhE0B,QAAQC,IAAI,CAACX,KAAKY,eAAgBZ,KAAKa,kBACjD,EAEA,kBAAMD,GACFZ,KAAKrB,SAAU,EACf,MAAMmC,EAAU,4CAA4Cd,KAAKZ,wBAAwBY,KAAKjB,uBAAuBiB,KAAKd,uBAAuBc,KAAKb,4BACtJ,IAAI4B,EAAW,GACf,OAAQf,KAAKX,YACT,KAAK,EACD0B,EAAW,GAAGD,kBACd,MACJ,KAAK,EACDC,EAAW,GAAGD,+BACd,MACJ,KAAK,EACDC,EAAW,GAAGD,iBAGlB,IACA,MAAME,QAAUC,MAAMC,EAAIH,GAAW,CACjCI,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,OAAQ,QAGR,IAACL,EAAEM,GACH,MAAM,IAAIC,MAAMvB,KAAKwB,GAAG,2BAGtB,MAAAC,QAAiBT,EAAEU,OACzB1B,KAAKpB,SAAW6C,EAASnD,KACzB0B,KAAKlB,mBAAqB2C,EAASE,KAEnC,MAAMC,GAAc5B,KAAKZ,YAAc,GAAKY,KAAKjB,eAAiB,EAC5D8C,EAAWC,KAAKC,IAAI/B,KAAKZ,YAAcY,KAAKjB,eAAgBiB,KAAKlB,mBAAmBkD,WACrFhC,KAAAf,SAAW,aAAa2C,OAAgBC,QAAe7B,KAAKlB,mBAAmBkD,4BAC/E5B,GACLN,QAAQM,MAAMA,EAAK,CAEvBJ,KAAKrB,SAAU,CACnB,EAEA,kBAAMsD,CAAaC,GACflC,KAAKd,cAAgBgD,EACrBlC,KAAKb,UAA+B,QAAnBa,KAAKb,UAAsB,OAAS,YAC/Ca,KAAKY,cACf,EAEA,eAAMuB,GACFnC,KAAKZ,YAAc,QACbY,KAAKY,cACf,EAEA,0BAAMwB,GACFpC,KAAKZ,YAAc,EACnBoB,aAAa6B,QAAQrC,KAAKhB,kBAAmBgB,KAAKjB,sBAC5CiB,KAAKY,cACf,EAEA,cAAM0B,GACGtC,KAAAZ,oBACCY,KAAKY,cACf,EAEA,cAAM2B,GACGvC,KAAAZ,oBACCY,KAAKY,cACf,EAEA,oBAAMC,GACE,IACA,MAAMG,QAAUC,MAAMC,EAAI,wCAAyC,CAC/DC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,OAAQ,QAGR,IAACL,EAAEM,GACH,MAAM,IAAIC,MAAMvB,KAAKwB,GAAG,mCAGtB,MAAAC,QAAiBT,EAAEU,OACzB1B,KAAKnB,WAAa4C,EAASnD,WACtB8B,GACLN,QAAQM,MAAMA,EAAK,CACvB","names":["presaleList","name","template","__vitePreload","import","__VITE_PRELOAD__","data","user","empresa","nav","aside","loading","presales","vendedores","paginationMetaData","entriesPerPage","entriesStorageKey","pageInfo","columnSortKey","sortOrder","currentPage","currentTab","vendedorName","ven","vendedor","_a","find","v","raz","init","console","log","this","getAuthenticatedUser","getCompanyGlobalData","empOmi","error","location","href","render","localStorage","getItem","Promise","all","loadPresales","loadVendedores","baseUrl","fetchUrl","r","fetch","url","credentials","headers","method","ok","Error","$t","response","json","meta","startEntry","endEntry","Math","min","totalRows","sortPresales","columnKey","changeTab","changeEntriesPerPage","setItem","nextPage","prevPage"],"ignoreList":[],"sources":["../../src/components/pages/presales/presale-list/presale-list.ts"],"sourcesContent":["import aside from '@/components/shared/aside/aside';\nimport nav from '@/components/shared/nav/nav';\nimport { ComponentModule, render } from '@/main';\nimport { Empresa } from '@/models/empresa';\nimport { PaginationMetaData } from '@/models/paginacion';\nimport { Presale } from '@/models/potencial';\nimport { User } from '@/models/user';\nimport { Vendedor } from '@/models/vendedor';\nimport { url, getCompanyGlobalData } from '@/services/api.service';\nimport { getAuthenticatedUser } from '@/services/auth.service';\n\nexport default {\n    name: () => 'presaleList',\n    template: () => import('./presale-list.html?raw'),\n    data: () => ({\n        user: null as User | null,\n        empresa: null as Empresa | null,\n        nav: null as string | null,\n        aside: null as string | null,\n        loading: true,\n        presales: null as Presale[] | null,\n        vendedores: null as Vendedor[] | null,\n\n        paginationMetaData: null as PaginationMetaData | null,\n        entriesPerPage: 10,\n        entriesStorageKey: 'isiparts.presale.entries-per-page',\n        pageInfo: '',\n\n        columnSortKey: 'pre',\n        sortOrder: 'desc',\n\n        currentPage: 1,\n\n        currentTab: 0,\n\n        vendedorName(ven: number): string {\n            const vendedor = this.vendedores?.find((v: Vendedor) => v.ven === ven);\n            return vendedor?.raz || '';\n        },\n\n        async init() {\n            console.log('presaleList@init');\n\n            try {\n                this.user = await getAuthenticatedUser();\n                this.empresa = await getCompanyGlobalData(this.user.empOmi);\n            } catch (error) {\n                location.href = '/login?redirect=/potencial/list';\n            }\n\n            this.nav = await render(nav);\n            this.aside = await render(aside);\n\n            this.loading = false;\n\n            this.entriesPerPage = localStorage.getItem(this.entriesStorageKey) ?? 10;\n\n            await Promise.all([this.loadPresales(), this.loadVendedores()]);\n        },\n\n        async loadPresales() {\n            this.loading = true;\n            const baseUrl = `isiWeb/web/v1/empresas/01/presuntos?page=${this.currentPage}&pageSize=${this.entriesPerPage}&sort=${this.columnSortKey}&order=${this.sortOrder}&esCliente=false`;\n            let fetchUrl = '';\n            switch (this.currentTab) {\n                case 0: // Todos\n                    fetchUrl = `${baseUrl}&conf:ne=false`;\n                    break;\n                case 1: // Pendientes de validaci√≥n\n                    fetchUrl = `${baseUrl}&conf:ne=false&conf:ne=true`;\n                    break;\n                case 2: // Validados\n                    fetchUrl = `${baseUrl}&conf:eq=true`;\n                    break;\n            }\n            try {\n                const r = await fetch(url(fetchUrl), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading presales'));\n                }\n\n                const response = await r.json();\n                this.presales = response.data as Presale[];\n                this.paginationMetaData = response.meta as PaginationMetaData;\n\n                const startEntry = (this.currentPage - 1) * this.entriesPerPage + 1;\n                const endEntry = Math.min(this.currentPage * this.entriesPerPage, this.paginationMetaData.totalRows);\n                this.pageInfo = `Mostrando ${startEntry} a ${endEntry} de ${this.paginationMetaData.totalRows} registros`;\n            } catch (error: any) {\n                console.error(error);\n            }\n            this.loading = false;\n        },\n\n        async sortPresales(columnKey: string) {\n            this.columnSortKey = columnKey;\n            this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n            await this.loadPresales();\n        },\n\n        async changeTab() {\n            this.currentPage = 1;\n            await this.loadPresales();\n        },\n\n        async changeEntriesPerPage() {\n            this.currentPage = 1;\n            localStorage.setItem(this.entriesStorageKey, this.entriesPerPage);\n            await this.loadPresales();\n        },\n\n        async nextPage() {\n            this.currentPage++;\n            await this.loadPresales();\n        },\n\n        async prevPage() {\n            this.currentPage--;\n            await this.loadPresales();\n        },\n\n        async loadVendedores() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/empresas/01/vendedores'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading presale vendedor'));\n                }\n\n                const response = await r.json();\n                this.vendedores = response.data as Vendedor[];\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n    }),\n} as ComponentModule;\n"],"file":"assets/presale-list-BeIEzaJG.js"}