{"version":3,"file":"signature_pad-eDKSxAXg.js","sources":["../../node_modules/.pnpm/signature_pad@5.0.7/node_modules/signature_pad/dist/signature_pad.js"],"sourcesContent":["/*!\n * Signature Pad v5.0.7 | https://github.com/szimek/signature_pad\n * (c) 2025 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, pressure, time) {\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(`Point is invalid: (${x}, ${y})`);\n        }\n        this.x = +x;\n        this.y = +y;\n        this.pressure = pressure || 0;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return (this.x === other.x &&\n            this.y === other.y &&\n            this.pressure === other.pressure &&\n            this.time === other.time);\n    }\n    velocityFrom(start) {\n        return this.time !== start.time\n            ? this.distanceTo(start) / (this.time - start.time)\n            : 0;\n    }\n}\n\nclass Bezier {\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n        const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n        const dxm = m1.x - m2.x;\n        const dym = m1.y - m2.y;\n        const k = l1 + l2 == 0 ? 0 : l2 / (l1 + l2);\n        const cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nclass SignatureEventTarget {\n    constructor() {\n        try {\n            this._et = new EventTarget();\n        }\n        catch (_a) {\n            this._et = document;\n        }\n    }\n    addEventListener(type, listener, options) {\n        this._et.addEventListener(type, listener, options);\n    }\n    dispatchEvent(event) {\n        return this._et.dispatchEvent(event);\n    }\n    removeEventListener(type, callback, options) {\n        this._et.removeEventListener(type, callback, options);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function wrapper(...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad extends SignatureEventTarget {\n    constructor(canvas, options = {}) {\n        var _a, _b, _c;\n        super();\n        this.canvas = canvas;\n        this._drawingStroke = false;\n        this._isEmpty = true;\n        this._lastPoints = [];\n        this._data = [];\n        this._lastVelocity = 0;\n        this._lastWidth = 0;\n        this._handleMouseDown = (event) => {\n            if (!this._isLeftButtonPressed(event, true) || this._drawingStroke) {\n                return;\n            }\n            this._strokeBegin(this._pointerEventToSignatureEvent(event));\n        };\n        this._handleMouseMove = (event) => {\n            if (!this._isLeftButtonPressed(event, true) || !this._drawingStroke) {\n                this._strokeEnd(this._pointerEventToSignatureEvent(event), false);\n                return;\n            }\n            this._strokeMoveUpdate(this._pointerEventToSignatureEvent(event));\n        };\n        this._handleMouseUp = (event) => {\n            if (this._isLeftButtonPressed(event)) {\n                return;\n            }\n            this._strokeEnd(this._pointerEventToSignatureEvent(event));\n        };\n        this._handleTouchStart = (event) => {\n            if (event.targetTouches.length !== 1 || this._drawingStroke) {\n                return;\n            }\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            this._strokeBegin(this._touchEventToSignatureEvent(event));\n        };\n        this._handleTouchMove = (event) => {\n            if (event.targetTouches.length !== 1) {\n                return;\n            }\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            if (!this._drawingStroke) {\n                this._strokeEnd(this._touchEventToSignatureEvent(event), false);\n                return;\n            }\n            this._strokeMoveUpdate(this._touchEventToSignatureEvent(event));\n        };\n        this._handleTouchEnd = (event) => {\n            if (event.targetTouches.length !== 0) {\n                return;\n            }\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n            this._strokeEnd(this._touchEventToSignatureEvent(event));\n        };\n        this._handlePointerDown = (event) => {\n            if (!event.isPrimary || !this._isLeftButtonPressed(event) || this._drawingStroke) {\n                return;\n            }\n            event.preventDefault();\n            this._strokeBegin(this._pointerEventToSignatureEvent(event));\n        };\n        this._handlePointerMove = (event) => {\n            if (!event.isPrimary) {\n                return;\n            }\n            if (!this._isLeftButtonPressed(event, true) || !this._drawingStroke) {\n                this._strokeEnd(this._pointerEventToSignatureEvent(event), false);\n                return;\n            }\n            event.preventDefault();\n            this._strokeMoveUpdate(this._pointerEventToSignatureEvent(event));\n        };\n        this._handlePointerUp = (event) => {\n            if (!event.isPrimary || this._isLeftButtonPressed(event)) {\n                return;\n            }\n            event.preventDefault();\n            this._strokeEnd(this._pointerEventToSignatureEvent(event));\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = (_a = options.throttle) !== null && _a !== void 0 ? _a : 16;\n        this.minDistance = (_b = options.minDistance) !== null && _b !== void 0 ? _b : 5;\n        this.dotSize = options.dotSize || 0;\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.compositeOperation = options.compositeOperation || 'source-over';\n        this.canvasContextOptions = (_c = options.canvasContextOptions) !== null && _c !== void 0 ? _c : {};\n        this._strokeMoveUpdate = this.throttle\n            ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle)\n            : SignaturePad.prototype._strokeUpdate;\n        this._ctx = canvas.getContext('2d', this.canvasContextOptions);\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const { _ctx: ctx, canvas } = this;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset(this._getPointGroupOptions());\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}) {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            const ratio = options.ratio || window.devicePixelRatio || 1;\n            const width = options.width || this.canvas.width / ratio;\n            const height = options.height || this.canvas.height / ratio;\n            const xOffset = options.xOffset || 0;\n            const yOffset = options.yOffset || 0;\n            this._reset(this._getPointGroupOptions());\n            image.onload = () => {\n                this._ctx.drawImage(image, xOffset, yOffset, width, height);\n                resolve();\n            };\n            image.onerror = (error) => {\n                reject(error);\n            };\n            image.crossOrigin = 'anonymous';\n            image.src = dataUrl;\n            this._isEmpty = false;\n        });\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                if (typeof encoderOptions !== 'object') {\n                    encoderOptions = undefined;\n                }\n                return `data:image/svg+xml;base64,${btoa(this.toSVG(encoderOptions))}`;\n            default:\n                if (typeof encoderOptions !== 'number') {\n                    encoderOptions = undefined;\n                }\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        this.canvas.style.userSelect = 'none';\n        const isIOS = /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n        if (window.PointerEvent && !isIOS) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.style.userSelect = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handlePointerDown);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this._removeMoveUpEventListeners();\n    }\n    _getListenerFunctions() {\n        var _a;\n        const canvasWindow = window.document === this.canvas.ownerDocument\n            ? window\n            : (_a = this.canvas.ownerDocument.defaultView) !== null && _a !== void 0 ? _a : this.canvas.ownerDocument;\n        return {\n            addEventListener: canvasWindow.addEventListener.bind(canvasWindow),\n            removeEventListener: canvasWindow.removeEventListener.bind(canvasWindow),\n        };\n    }\n    _removeMoveUpEventListeners() {\n        const { removeEventListener } = this._getListenerFunctions();\n        removeEventListener('pointermove', this._handlePointerMove);\n        removeEventListener('pointerup', this._handlePointerUp);\n        removeEventListener('mousemove', this._handleMouseMove);\n        removeEventListener('mouseup', this._handleMouseUp);\n        removeEventListener('touchmove', this._handleTouchMove);\n        removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups, { clear = true } = {}) {\n        if (clear) {\n            this.clear();\n        }\n        this._fromData(pointGroups, this._drawCurve.bind(this), this._drawDot.bind(this));\n        this._data = this._data.concat(pointGroups);\n    }\n    toData() {\n        return this._data;\n    }\n    _isLeftButtonPressed(event, only) {\n        if (only) {\n            return event.buttons === 1;\n        }\n        return (event.buttons & 1) === 1;\n    }\n    _pointerEventToSignatureEvent(event) {\n        return {\n            event: event,\n            type: event.type,\n            x: event.clientX,\n            y: event.clientY,\n            pressure: 'pressure' in event ? event.pressure : 0,\n        };\n    }\n    _touchEventToSignatureEvent(event) {\n        const touch = event.changedTouches[0];\n        return {\n            event: event,\n            type: event.type,\n            x: touch.clientX,\n            y: touch.clientY,\n            pressure: touch.force,\n        };\n    }\n    _getPointGroupOptions(group) {\n        return {\n            penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n            dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n            minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n            maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n            velocityFilterWeight: group && 'velocityFilterWeight' in group\n                ? group.velocityFilterWeight\n                : this.velocityFilterWeight,\n            compositeOperation: group && 'compositeOperation' in group\n                ? group.compositeOperation\n                : this.compositeOperation,\n        };\n    }\n    _strokeBegin(event) {\n        const cancelled = !this.dispatchEvent(new CustomEvent('beginStroke', { detail: event, cancelable: true }));\n        if (cancelled) {\n            return;\n        }\n        const { addEventListener } = this._getListenerFunctions();\n        switch (event.event.type) {\n            case 'mousedown':\n                addEventListener('mousemove', this._handleMouseMove);\n                addEventListener('mouseup', this._handleMouseUp);\n                break;\n            case 'touchstart':\n                addEventListener('touchmove', this._handleTouchMove);\n                addEventListener('touchend', this._handleTouchEnd);\n                break;\n            case 'pointerdown':\n                addEventListener('pointermove', this._handlePointerMove);\n                addEventListener('pointerup', this._handlePointerUp);\n                break;\n        }\n        this._drawingStroke = true;\n        const pointGroupOptions = this._getPointGroupOptions();\n        const newPointGroup = Object.assign(Object.assign({}, pointGroupOptions), { points: [] });\n        this._data.push(newPointGroup);\n        this._reset(pointGroupOptions);\n        this._strokeUpdate(event);\n    }\n    _strokeUpdate(event) {\n        if (!this._drawingStroke) {\n            return;\n        }\n        if (this._data.length === 0) {\n            this._strokeBegin(event);\n            return;\n        }\n        this.dispatchEvent(new CustomEvent('beforeUpdateStroke', { detail: event }));\n        const point = this._createPoint(event.x, event.y, event.pressure);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint\n            ? point.distanceTo(lastPoint) <= this.minDistance\n            : false;\n        const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point, pointGroupOptions);\n            if (!lastPoint) {\n                this._drawDot(point, pointGroupOptions);\n            }\n            else if (curve) {\n                this._drawCurve(curve, pointGroupOptions);\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n                pressure: point.pressure,\n            });\n        }\n        this.dispatchEvent(new CustomEvent('afterUpdateStroke', { detail: event }));\n    }\n    _strokeEnd(event, shouldUpdate = true) {\n        this._removeMoveUpEventListeners();\n        if (!this._drawingStroke) {\n            return;\n        }\n        if (shouldUpdate) {\n            this._strokeUpdate(event);\n        }\n        this._drawingStroke = false;\n        this.dispatchEvent(new CustomEvent('endStroke', { detail: event }));\n    }\n    _handlePointerEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('pointerdown', this._handlePointerDown);\n    }\n    _handleMouseEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n    }\n    _reset(options) {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n        this._ctx.fillStyle = options.penColor;\n        this._ctx.globalCompositeOperation = options.compositeOperation;\n    }\n    _createPoint(x, y, pressure) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, pressure, new Date().getTime());\n    }\n    _addPoint(point, options) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2], options);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint, options) {\n        const velocity = options.velocityFilterWeight * endPoint.velocityFrom(startPoint) +\n            (1 - options.velocityFilterWeight) * this._lastVelocity;\n        const newWidth = this._strokeWidth(velocity, options);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity, options) {\n        return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve(curve, options) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.ceil(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = options.penColor;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = Math.min(curve.startWidth + ttt * widthDelta, options.maxWidth);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot(point, options) {\n        const ctx = this._ctx;\n        const width = options.dotSize > 0\n            ? options.dotSize\n            : (options.minWidth + options.maxWidth) / 2;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = options.penColor;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { points } = group;\n            const pointGroupOptions = this._getPointGroupOptions(group);\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.pressure, basicPoint.time);\n                    if (j === 0) {\n                        this._reset(pointGroupOptions);\n                    }\n                    const curve = this._addPoint(point, pointGroupOptions);\n                    if (curve) {\n                        drawCurve(curve, pointGroupOptions);\n                    }\n                }\n            }\n            else {\n                this._reset(pointGroupOptions);\n                drawDot(points[0], pointGroupOptions);\n            }\n        }\n    }\n    toSVG({ includeBackgroundColor = false } = {}) {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n        svg.setAttribute('width', maxX.toString());\n        svg.setAttribute('height', maxY.toString());\n        if (includeBackgroundColor && this.backgroundColor) {\n            const rect = document.createElement('rect');\n            rect.setAttribute('width', '100%');\n            rect.setAttribute('height', '100%');\n            rect.setAttribute('fill', this.backgroundColor);\n            svg.appendChild(rect);\n        }\n        this._fromData(pointGroups, (curve, { penColor }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` +\n                    `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` +\n                    `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` +\n                    `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', penColor);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, (point, { penColor, dotSize, minWidth, maxWidth }) => {\n            const circle = document.createElement('circle');\n            const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n            circle.setAttribute('r', size.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', penColor);\n            svg.appendChild(circle);\n        });\n        return svg.outerHTML;\n    }\n}\n\nexport { SignaturePad as default };\n//# sourceMappingURL=signature_pad.js.map\n"],"names":["Point","constructor","x","y","pressure","time","isNaN","Error","this","Date","now","distanceTo","start","Math","sqrt","pow","equals","other","velocityFrom","Bezier","fromPoints","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","k","cm","tx","ty","startPoint","control2","control1","endPoint","startWidth","endWidth","length","px","py","i","t","cx","point","cy","xdiff","ydiff","SignatureEventTarget","_et","EventTarget","_a","document","addEventListener","type","listener","options","dispatchEvent","event","removeEventListener","callback","SignaturePad","canvas","_b","_c","super","_drawingStroke","_isEmpty","_lastPoints","_data","_lastVelocity","_lastWidth","_handleMouseDown","_isLeftButtonPressed","_strokeBegin","_pointerEventToSignatureEvent","_handleMouseMove","_strokeMoveUpdate","_strokeEnd","_handleMouseUp","_handleTouchStart","targetTouches","cancelable","preventDefault","_touchEventToSignatureEvent","_handleTouchMove","_handleTouchEnd","_handlePointerDown","isPrimary","_handlePointerMove","_handlePointerUp","velocityFilterWeight","minWidth","maxWidth","throttle","minDistance","dotSize","penColor","backgroundColor","compositeOperation","canvasContextOptions","fn","wait","result","storedContext","storedArgs","previous","timeout","later","apply","args","remaining","clearTimeout","window","setTimeout","prototype","_strokeUpdate","_ctx","getContext","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_reset","_getPointGroupOptions","fromDataURL","dataUrl","Promise","resolve","reject","image","Image","ratio","devicePixelRatio","xOffset","yOffset","onload","drawImage","onerror","error","crossOrigin","src","toDataURL","encoderOptions","btoa","toSVG","style","touchAction","msTouchAction","userSelect","isIOS","test","navigator","userAgent","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","off","_removeMoveUpEventListeners","_getListenerFunctions","canvasWindow","ownerDocument","defaultView","bind","isEmpty","fromData","pointGroups","_fromData","_drawCurve","_drawDot","concat","toData","only","buttons","clientX","clientY","touch","changedTouches","force","group","CustomEvent","detail","pointGroupOptions","newPointGroup","Object","assign","push","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","curve","_addPoint","shouldUpdate","globalCompositeOperation","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","shift","velocity","newWidth","_strokeWidth","max","_drawCurveSegment","moveTo","arc","PI","widthDelta","drawSteps","ceil","beginPath","tt","ttt","u","uu","uuu","min","closePath","fill","drawCurve","drawDot","j","basicPoint","includeBackgroundColor","maxX","maxY","svg","createElementNS","setAttribute","toString","createElement","appendChild","path","attr","toFixed","circle","size","outerHTML"],"mappings":"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","x_google_ignoreList":[0]}