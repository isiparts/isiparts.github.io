{"version":3,"file":"call-bind-apply-helpers-BSpli2uY.js","sources":["../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js","../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js","../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js","../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js","../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js","../../node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/applyBind.js"],"sourcesContent":["'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n","'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n","'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n","'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n","'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar $apply = require('./functionApply');\nvar actualApply = require('./actualApply');\n\n/** @type {import('./applyBind')} */\nmodule.exports = function applyBind() {\n\treturn actualApply(bind, $apply, arguments);\n};\n"],"names":["functionCall","Function","prototype","call","functionApply","apply","bind","require$$0","$apply","require$$1","$call","require$$2","$reflectApply","reflectApply","Reflect","actualApply","$TypeError","requireType","$actualApply","require$$3","callBindApplyHelpers","args","length","applyBind","arguments"],"mappings":"qiBAGAA,EAAiBC,SAASC,UAAUC,mCCApCC,EAAiBH,SAASC,UAAUG,sCCDpC,IAAIC,EAAOC,IAEPC,EAASC,IACTC,EAAQC,IACRC,WCHUC,EAAsB,oBAAZC,SAA2BA,SAAWA,QAAQT,cDMxDU,EAAGH,GAAiBN,EAAKH,KAAKO,EAAOF,kCEPnD,IAAIF,EAAOC,IACPS,EAAsCC,IAEtCP,EAAQC,IACRO,EAAeC,WAGFC,EAAA,SAAuBC,GACvC,GAAIA,EAAKC,OAAS,GAAwB,mBAAZD,EAAK,GAC5B,MAAA,IAAIL,EAAW,0BAEf,OAAAE,EAAaZ,EAAMI,EAAOW,EACjC,iCCZD,IAAIf,EAAOC,IACPC,EAASC,IACTM,EAAcJ,WAGJY,EAAG,WACTR,OAAAA,EAAYT,EAAME,EAAQgB,UACjC","x_google_ignoreList":[0,1,2,3,4,5]}