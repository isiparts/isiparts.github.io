{"version":3,"mappings":"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","names":["EmptyAdjunto","or","ejr","sef","docum","numDocum","nombre","mimeType","fecha","hora","descripcion","documento","EmptyShipmentDetails","cif","dup","nroenv","raz","dir","codpos","pob","pobdes","pro","prodes","pai","paides","tel1","tel2","fax","email","presaleEdit","name","template","__vitePreload","import","__VITE_PRELOAD__","data","config","loadConfig","user","empresa","nav","aside","loading","submitting","provinciaSelected","poblacionSelected","actividadSelected","tpempSelected","codposText","presale","editedPresale","provincias","poblaciones","ivas","modosPago","diasPago","paises","tiposCliente","tiposEmpresa","vendedores","cobradores","zonas","actividades","direccionesEnvio","modalShipmentEdit","modalShipmentDelete","modalShipmentAdd","modalValidatePresale","modalSepaAdd","modalSepaDelete","modalSepaView","adjuntos","loadingPresaleShipmentDetails","loadingSepa","currentShipmentDetails","currentAdjunto","tabs","id","text","formRef","currentTabId","init","console","log","this","getAuthenticatedUser","getCompanyGlobalData","empOmi","error","location","href","render","initModalAddShipmentDetail","initModalDeleteShipmentDetail","initModalValidatePresale","initModalAddSepa","initModalDeleteSepa","initModalViewSepa","$watch","async","loadShippingDetails","loadSepa","debouncedAssignPoblacionProvincia","debounce","assignPoblacionProvincia","value","oldValue","$nextTick","Promise","all","loadPresale","loadIvas","loadPaymentModes","loadPaymentDays","loadCountries","loadClientTypes","loadZones","loadCompanyTypes","loadActivities","loadSellers","callback","delay","timeoutTimer","args","clearTimeout","setTimeout","Modal","$refs","placement","backdrop","backdropClasses","closable","onHide","onShow","onToggle","override","initModalEditShipmentDetail","openAddSepaModal","formModalAddSepa","reset","_a","show","openDeleteSepaModal","adjunto","openViewSepaModal","objectDiv","modalSepaViewImage","children","length","removeChild","newModalImg","document","createElement","className","pdfUrl","response","fetch","ok","Error","$t","type","appendChild","openAddShipmentDetailModal","formModalAddShipment","openValidateModal","openEditShipmentDetailModal","shipmentDetail","loadPoblaciones","openDeleteShipmentDetailModal","addSepa","e","form","target","file","FormData","get","size","reader","FileReader","onload","event","dataURL","result","attachment","_b","workOrder","OR","_c","_d","Date","toISOString","split","push","window","localStorage","setItem","JSON","stringify","$dispatch","TOAST_TRIGGER","msg","level","ToastSuccess","readAsDataURL","hide","deleteSepa","includes","index","indexOf","splice","ToastError","getItem","parse","submitFormByEvent","submitter","innerText","preventDefault","formElement","submitForm","presaleData","Object","fromEntries","entries","submitFormByRef","targetFormRefName","targetTab","checkValidity","reportValidity","savePresale","r","url","$params","pre","credentials","method","headers","body","perfac","rietotcon","ivc","abf","enviarfacturaelectronica","enviarfacturaemail","cobrador","tpemp","json","message","$router","navigate","addShipmentDetails","newShipment","shipmentDetails","editShipmentDetails","editedShipment","validatePresale","validationDate","getFullYear","getMonth","getDate","conf","fecconf","usuconf","usuario","deleteShipmentDetail","loadProvincias","provincia","find","p","statusText","poblacionPro","loadPoblacionCodpos","newCodpos","provinciaPro","targetPoblacion"],"ignoreList":[],"sources":["../../src/models/adjunto.ts","../../src/models/potencial.ts","../../src/components/pages/presales/presale-edit/presale-edit.ts"],"sourcesContent":["export interface Adjunto {\n    or: string;\n    ejr: number;\n    sef: string;\n    docum: number;\n    numDocum: number;\n    nombre: string;\n    mimeType: string;\n    fecha: string;\n    hora: string;\n    descripcion: string;\n    documento: string;\n}\n\nexport const EmptyAdjunto: Adjunto = {\n    or: '',\n    ejr: -1,\n    sef: '',\n    docum: -1,\n    numDocum: -1,\n    nombre: '',\n    mimeType: '',\n    fecha: '',\n    hora: '',\n    descripcion: '',\n    documento: '',\n};\n","export interface Presale {\n    pre: number; // identifier\n    cif: string;\n    dup: string;\n    nom: string;\n    raz: string;\n    pju: string;\n    dir: string;\n    codpos: string;\n    pob: string;\n    pobdes: string;\n    pro: string;\n    prodes: string;\n    pai: string;\n    paides: string;\n    tel1: string;\n    tel2: string;\n    fax: string;\n    email: string;\n    fecalt: string;\n    obs: string;\n    acti: string;\n    ven: string;\n    cobrador: number;\n    ivc: boolean;\n    perfac: number;\n    iva: string;\n    pgm: string;\n    pgd: string;\n    abf: boolean;\n    enviarfacturaelectronica: boolean;\n    enviarfacturaemail: boolean;\n    emailenviofact: string;\n    rietotcon: number;\n    tcl: string;\n    zona: string;\n    conf: boolean;\n    fecconf: string;\n    usuarioconf: string;\n    esCliente: boolean;\n}\n\nexport const EmptyPresale: Presale = {\n    pre: -1,\n    cif: '',\n    dup: '',\n    nom: '',\n    raz: '',\n    pju: '',\n    dir: '',\n    codpos: '',\n    pob: '',\n    pobdes: '',\n    pro: '',\n    prodes: '',\n    pai: '',\n    paides: '',\n    tel1: '',\n    tel2: '',\n    fax: '',\n    email: '',\n    fecalt: '',\n    obs: '',\n    acti: '',\n    ven: '',\n    cobrador: -1,\n    ivc: false,\n    perfac: -1,\n    iva: '',\n    pgm: '',\n    pgd: '',\n    abf: false,\n    enviarfacturaelectronica: false,\n    enviarfacturaemail: false,\n    emailenviofact: '',\n    rietotcon: -1,\n    tcl: '',\n    zona: '',\n    conf: false,\n    fecconf: '',\n    usuarioconf: '',\n    esCliente: false,\n};\n\nexport interface PresaleIva {\n    iva: string;\n    ivades: string;\n}\n\nexport interface PresalePaymentMode {\n    pgm: string;\n    pgmdes: string;\n}\n\nexport interface PresalePaymentDay {\n    pgd: string;\n    pgddes: string;\n}\n\nexport interface PresaleCountry {\n    pai: string;\n    paides: string;\n    div: string;\n    iso: string;\n}\n\nexport interface PresaleClientType {\n    tcl: string;\n    tcldes: string;\n}\n\nexport interface PresaleActivity {\n    acti: string;\n    actides: string;\n}\n\nexport interface PresaleZone {\n    zona: string;\n    zonades: string;\n}\n\nexport interface PresaleCompanyType {\n    tpemp: string;\n    tpempdes: string;\n}\n\nexport interface PresaleShippingDetails {\n    cif: string;\n    dup: string;\n    nroenv: number;\n    raz: string;\n    dir: string;\n    codpos: string;\n    pob: string;\n    pobdes: string;\n    pro: string;\n    prodes: string;\n    pai: string;\n    paides: string;\n    tel1: string;\n    tel2: string;\n    fax: string;\n    email: string;\n}\n\nexport const EmptyShipmentDetails: PresaleShippingDetails = {\n    cif: '',\n    dup: '',\n    nroenv: -1,\n    raz: '',\n    dir: '',\n    codpos: '',\n    pob: '',\n    pobdes: '',\n    pro: '',\n    prodes: '',\n    pai: '',\n    paides: '',\n    tel1: '',\n    tel2: '',\n    fax: '',\n    email: '',\n};\n","import aside from '@/components/shared/aside/aside';\nimport nav from '@/components/shared/nav/nav';\nimport { ComponentModule, render } from '@/main';\nimport { Adjunto, EmptyAdjunto } from '@/models/adjunto';\nimport { Empresa } from '@/models/empresa';\nimport { TOAST_TRIGGER } from '@/models/events';\nimport { Poblacion } from '@/models/poblacion';\nimport {\n    EmptyShipmentDetails,\n    Presale,\n    PresaleActivity,\n    PresaleClientType,\n    PresaleCompanyType,\n    PresaleCountry,\n    PresaleIva,\n    PresalePaymentDay,\n    PresalePaymentMode,\n    PresaleShippingDetails,\n    PresaleZone,\n} from '@/models/potencial';\nimport { Provincia } from '@/models/provincia';\nimport { ToastError, ToastSuccess } from '@/models/toast';\nimport { User } from '@/models/user';\nimport { Vendedor } from '@/models/vendedor';\nimport { url, getCompanyGlobalData } from '@/services/api.service';\nimport { getAuthenticatedUser } from '@/services/auth.service';\nimport { loadConfig } from '@/services/config.service';\nimport { Modal } from 'flowbite';\n\nexport default {\n    name: () => 'presaleEdit',\n    template: () => import('./presale-edit.html?raw'),\n    data: () => ({\n        config: loadConfig(),\n\n        // Generic properties\n        user: null as User | null,\n        empresa: null as Empresa | null,\n\n        // x-html components\n        nav: null as string | null,\n        aside: null as string | null,\n\n        // loading states\n        loading: true,\n\n        // form states\n        submitting: false,\n\n        // form models\n        provinciaSelected: null as string | null,\n        poblacionSelected: null as string | null,\n        actividadSelected: null as string | null,\n        tpempSelected: null as string | null,\n        codposText: null as string | null,\n\n        // presale generic\n        presale: null as Presale | null,\n\n        // edited presale\n        editedPresale: null as Presale | null,\n\n        // general data\n        provincias: [] as Provincia[],\n        poblaciones: [] as Poblacion[],\n\n        // presale data\n        ivas: [] as PresaleIva[],\n        modosPago: [] as PresalePaymentMode[],\n        diasPago: [] as PresalePaymentDay[],\n        paises: [] as PresaleCountry[],\n        tiposCliente: [] as PresaleClientType[],\n        tiposEmpresa: [] as PresaleCompanyType[],\n        vendedores: [] as Vendedor[],\n        cobradores: [] as Vendedor[],\n        zonas: [] as PresaleZone[],\n        actividades: [] as PresaleActivity[],\n        direccionesEnvio: [] as PresaleShippingDetails[],\n\n        // modals\n        modalShipmentEdit: null as Modal | null,\n        modalShipmentDelete: null as Modal | null,\n        modalShipmentAdd: null as Modal | null,\n        modalValidatePresale: null as Modal | null,\n        modalSepaAdd: null as Modal | null,\n        modalSepaDelete: null as Modal | null,\n        modalSepaView: null as Modal | null,\n\n        adjuntos: [] as Adjunto[],\n\n        // table loading\n        loadingPresaleShipmentDetails: false,\n        loadingSepa: false,\n\n        // table selection\n        currentShipmentDetails: EmptyShipmentDetails,\n        currentAdjunto: EmptyAdjunto,\n\n        // Tabs\n        tabs: [\n            { id: 0, text: 'Datos de cliente', formRef: 'formDatosCliente' }, // TODO: use translation service\n            { id: 1, text: 'Datos de facturación', formRef: 'formDatosFacturacion' }, // TODO: use translation service\n            { id: 2, text: 'Clasificación de cliente', formRef: 'formClasificacionCliente' }, // TODO: use translation service\n            { id: 3, text: 'Direcciones de envío', formRef: 'tableShipmentDetails' }, // TODO: use translation service\n            { id: 4, text: 'Protección de datos', formRef: 'formProteccionDatos' }, // TODO: use translation service\n        ],\n        currentTabId: 0,\n\n        async init() {\n            console.log('presale-edit@init');\n\n            try {\n                this.user = await getAuthenticatedUser();\n                this.empresa = await getCompanyGlobalData(this.user.empOmi);\n            } catch (error) {\n                location.href = '/login';\n            }\n\n            this.nav = await render(nav);\n            this.aside = await render(aside);\n\n            this.initModalAddShipmentDetail();\n            this.initModalDeleteShipmentDetail();\n            this.initModalValidatePresale();\n\n            this.initModalAddSepa();\n            this.initModalDeleteSepa();\n            this.initModalViewSepa();\n\n            this.$watch('currentTabId', async () => {\n                if (this.currentTabId === 3) {\n                    await this.loadShippingDetails();\n                }\n\n                if (this.currentTabId === 4) {\n                    this.loadSepa();\n                }\n            });\n\n            const debouncedAssignPoblacionProvincia = this.debounce(async () => {\n                this.assignPoblacionProvincia();\n            }, 500);\n\n            this.$watch('codposText', (value: string, oldValue: string) => {\n                if (value === oldValue) {\n                    return;\n                }\n                if (value !== oldValue && oldValue !== null) {\n                    debouncedAssignPoblacionProvincia();\n                }\n            });\n\n            this.$nextTick(async () => {\n                console.log('101-presale-edit@nextTick');\n\n                await Promise.all([\n                    this.loadPresale(),\n                    this.loadIvas(),\n                    this.loadPaymentModes(),\n                    this.loadPaymentDays(),\n                    this.loadCountries(),\n                    this.loadClientTypes(),\n                    this.loadZones(),\n                    this.loadCompanyTypes(),\n                    this.loadActivities(),\n                    this.loadSellers(),\n                ]);\n\n                console.log(this.presale, 'presale');\n            });\n\n            this.loading = false;\n        },\n\n        debounce<T extends unknown[]>(callback: (...args: T) => void, delay: number) {\n            let timeoutTimer: ReturnType<typeof setTimeout>;\n            return (...args: T) => {\n                clearTimeout(timeoutTimer);\n                timeoutTimer = setTimeout(() => {\n                    callback(...args);\n                }, delay);\n            };\n        },\n\n        initModalAddSepa() {\n            this.$nextTick(() => {\n                this.modalSepaAdd = new Modal(\n                    this.$refs.modalSepaAdd,\n                    {\n                        placement: 'center',\n                        backdrop: 'dynamic',\n                        backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',\n                        closable: true,\n                        onHide: () => {\n                            console.log('modal is hidden');\n                        },\n                        onShow: () => {\n                            console.log('modal is shown');\n                        },\n                        onToggle: () => {\n                            console.log('modal has been toggled');\n                        },\n                    },\n                    {\n                        id: 'modal-sepa-add',\n                        override: true,\n                    },\n                );\n            });\n        },\n\n        initModalDeleteSepa() {\n            this.$nextTick(() => {\n                this.modalSepaDelete = new Modal(\n                    this.$refs.modalSepaDelete,\n                    {\n                        placement: 'center',\n                        backdrop: 'dynamic',\n                        backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',\n                        closable: true,\n                        onHide: () => {\n                            console.log('modal is hidden');\n                        },\n                        onShow: () => {\n                            console.log('modal is shown');\n                        },\n                        onToggle: () => {\n                            console.log('modal has been toggled');\n                        },\n                    },\n                    {\n                        id: 'modal-sepa-delete',\n                        override: true,\n                    },\n                );\n            });\n        },\n\n        initModalViewSepa() {\n            this.$nextTick(() => {\n                this.modalSepaView = new Modal(\n                    this.$refs.modalSepaView,\n                    {\n                        placement: 'center',\n                        backdrop: 'dynamic',\n                        backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',\n                        closable: true,\n                        onHide: () => {\n                            console.log('modal is hidden');\n                        },\n                        onShow: () => {\n                            console.log('modal is shown');\n                        },\n                        onToggle: () => {\n                            console.log('modal has been toggled');\n                        },\n                    },\n                    {\n                        id: 'modal-sepa-view',\n                        override: true,\n                    },\n                );\n            });\n        },\n\n        initModalAddShipmentDetail() {\n            this.$nextTick(() => {\n                this.modalShipmentAdd = new Modal(\n                    this.$refs.modalShipmentAdd,\n                    {\n                        placement: 'center',\n                        backdrop: 'static', // Prevent closing the modal when clicking outside\n                        backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',\n                        closable: true,\n                        onHide: () => {\n                            console.log('modal is hidden');\n                        },\n                        onShow: () => {\n                            console.log('modal is shown');\n                        },\n                        onToggle: () => {\n                            console.log('modal has been toggled');\n                        },\n                    },\n                    {\n                        id: 'modal-shipment-add',\n                        override: true,\n                    },\n                );\n            });\n        },\n\n        initModalEditShipmentDetail() {\n            this.$nextTick(() => {\n                this.modalShipmentEdit = new Modal(\n                    this.$refs.modalShipmentEdit,\n                    {\n                        placement: 'center',\n                        backdrop: 'static', // Prevent closing the modal when clicking outside\n                        backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',\n                        closable: true,\n                        onHide: () => {\n                            console.log('modal is hidden');\n                        },\n                        onShow: () => {\n                            console.log('modal is shown');\n                        },\n                        onToggle: () => {\n                            console.log('modal has been toggled');\n                        },\n                    },\n                    {\n                        id: 'modalShipmentEdit',\n                        override: true,\n                    },\n                );\n            });\n        },\n\n        initModalDeleteShipmentDetail() {\n            this.$nextTick(() => {\n                this.modalShipmentDelete = new Modal(\n                    this.$refs.modalShipmentDelete,\n                    {\n                        placement: 'center',\n                        backdrop: 'dynamic',\n                        backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',\n                        closable: true,\n                        onHide: () => {\n                            console.log('modal is hidden');\n                        },\n                        onShow: () => {\n                            console.log('modal is shown');\n                        },\n                        onToggle: () => {\n                            console.log('modal has been toggled');\n                        },\n                    },\n                    {\n                        id: `modal-shipment-delete-${this.currentShipmentDetails.nroenv}`,\n                        override: true,\n                    },\n                );\n            });\n        },\n\n        initModalValidatePresale() {\n            this.$nextTick(() => {\n                this.modalValidatePresale = new Modal(\n                    this.$refs.modalValidatePresale,\n                    {\n                        placement: 'center',\n                        backdrop: 'dynamic',\n                        backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40',\n                        closable: true,\n                        onHide: () => {\n                            console.log('modal is hidden');\n                        },\n                        onShow: () => {\n                            console.log('modal is shown');\n                        },\n                        onToggle: () => {\n                            console.log('modal has been toggled');\n                        },\n                    },\n                    {\n                        id: 'modal-validate-presale',\n                        override: true,\n                    },\n                );\n            });\n        },\n\n        openAddSepaModal() {\n            this.$refs.formModalAddSepa.reset();\n            this.modalSepaAdd?.show();\n        },\n\n        openDeleteSepaModal(adjunto: Adjunto) {\n            this.currentAdjunto = adjunto;\n            this.modalSepaDelete?.show();\n        },\n\n        async openViewSepaModal(adjunto: Adjunto) {\n            try {\n                const objectDiv = this.$refs.modalSepaViewImage as HTMLDivElement;\n                if (objectDiv.children.length > 0) {\n                    objectDiv.removeChild(objectDiv.children[0]);\n                }\n                const newModalImg = document.createElement('object');\n                newModalImg.className = 'w-auto h-auto max-h-full';\n                if (adjunto.mimeType === 'application/pdf') {\n                    newModalImg.className = 'w-full h-full max-h-full';\n                }\n                const pdfUrl = '/sepa.pdf';\n                const response = await fetch(pdfUrl);\n                if (!response.ok) {\n                    throw new Error(this.$t('PDF Error'));\n                }\n                console.log(response);\n                newModalImg.data = pdfUrl;\n                newModalImg.type = 'application/pdf';\n                objectDiv.appendChild(newModalImg);\n                this.modalSepaView?.show();\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        openAddShipmentDetailModal() {\n            this.provinciaSelected = false;\n            this.$refs.formModalAddShipment.reset();\n            this.modalShipmentAdd?.show();\n        },\n\n        openValidateModal() {\n            this.modalValidatePresale?.show();\n        },\n\n        async openEditShipmentDetailModal(shipmentDetail: PresaleShippingDetails) {\n            this.currentShipmentDetails = { ...shipmentDetail };\n            await this.loadPoblaciones(this.currentShipmentDetails.pro);\n            this.modalShipmentEdit?.show();\n        },\n\n        openDeleteShipmentDetailModal(shipmentDetail: PresaleShippingDetails) {\n            this.currentShipmentDetails = shipmentDetail;\n            this.modalShipmentDelete?.show();\n        },\n\n        addSepa(e: SubmitEvent) {\n            this.submitting = true;\n            const form = e.target as HTMLFormElement;\n            const data = new FormData(form);\n            const file = data.get('file') as File;\n            if (file.size > 0) {\n                const reader = new FileReader();\n                reader.onload = (event) => {\n                    const dataURL = event.target?.result as string;\n                    const attachment = {\n                        or: this.workOrder?.OR,\n                        ejr: this.workOrder?.ejr,\n                        sef: this.workOrder?.sef,\n                        docum: 1,\n                        numDocum: 1,\n                        nombre: file.name,\n                        mimeType: 'application/pdf',\n                        fecha: new Date().toISOString().split('T')[0],\n                        hora: new Date().toISOString().split('T')[1],\n                        descripcion: '',\n                        documento: dataURL.split(',')[1],\n                    };\n                    this.adjuntos.push(attachment as Adjunto);\n                    window.localStorage.setItem('isiparts.presale.sepa', JSON.stringify(attachment));\n                    this.$dispatch(TOAST_TRIGGER, {\n                        msg: 'Documento de protección de datos añadido correctamente',\n                        level: ToastSuccess,\n                    });\n                };\n                reader.readAsDataURL(file);\n            }\n            this.submitting = false;\n            this.modalSepaAdd?.hide();\n        },\n\n        deleteSepa(adjunto: Adjunto) {\n            try {\n                this.submitting = true;\n                if (this.adjuntos.includes(adjunto)) {\n                    const index = this.adjuntos.indexOf(adjunto);\n                    this.adjuntos.splice(index, 1);\n                    this.modalSepaDelete?.hide();\n                }\n                this.submitting = false;\n                this.$dispatch(TOAST_TRIGGER, {\n                    msg: 'Documento de protección de datos eliminado correctamente',\n                    level: ToastSuccess,\n                });\n            } catch (error: any) {\n                console.error(error);\n                this.submitting = false;\n                this.$dispatch(TOAST_TRIGGER, { msg: error, level: ToastError });\n            }\n        },\n\n        loadSepa() {\n            this.loadingSepa = true;\n            if (window.localStorage.getItem('isiparts.presale.sepa')) {\n                const attachment = JSON.parse(window.localStorage.getItem('isiparts.presale.sepa') ?? '{}');\n                this.adjuntos.push(attachment as Adjunto);\n            }\n            setTimeout(() => {\n                this.loadingSepa = false;\n            }, 1000);\n        },\n\n        submitFormByEvent(e: SubmitEvent) {\n            console.log('submitFormByEvent', e.submitter?.innerText);\n            e.preventDefault();\n            const formElement = e.target as HTMLFormElement;\n\n            this.submitForm(formElement);\n        },\n\n        submitForm(formElement: HTMLFormElement) {\n            const form = new FormData(formElement);\n            const presaleData = Object.fromEntries(form.entries());\n\n            this.editedPresale = {\n                ...this.editedPresale,\n                ...presaleData,\n            };\n\n            console.log(this.editedPresale);\n        },\n\n        submitFormByRef(targetFormRefName: string, targetTab: number) {\n            if (targetFormRefName !== 'tableShipmentDetails' && targetFormRefName !== 'formProteccionDatos') {\n                const form = this.$refs[targetFormRefName] as HTMLFormElement;\n                if (!form.checkValidity()) {\n                    form.reportValidity();\n                    return;\n                }\n                this.submitForm(form);\n            }\n            this.currentTabId = targetTab;\n        },\n\n        async savePresale() {\n            try {\n                this.submitting = true;\n                const r = await fetch(url(`isiWeb/web/v1/empresas/01/presuntos/${this.$params.pre}`), {\n                    credentials: 'include',\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        ...this.editedPresale,\n                        pro: this.provinciaSelected,\n                        pob: this.poblacionSelected,\n                        prodes: this.editedPresale.prodes,\n                        pobdes: this.editedPresale.pobdes,\n                        codpos: this.codposText,\n                        perfac: +this.editedPresale.perfac,\n                        rietotcon: +this.editedPresale.rietotcon,\n                        ivc: this.editedPresale.ivc === 'true',\n                        abf: this.editedPresale.abf === 'on',\n                        enviarfacturaelectronica: this.editedPresale.enviarfacturaelectronica === 'on',\n                        enviarfacturaemail: this.editedPresale.enviarfacturaemail === 'on',\n                        cobrador: +this.editedPresale.cobrador,\n                        tpemp: this.tpempSelected,\n                        'acti[1]': this.actividadSelected,\n                    }),\n                });\n\n                if (!r.ok) {\n                    const response = await r.json();\n                    throw new Error(this.$t(response.message));\n                }\n\n                const response = await r.json();\n                this.$router.navigate('/potencial/list');\n                this.$dispatch(TOAST_TRIGGER, { msg: response.message, level: ToastSuccess });\n            } catch (error: any) {\n                console.error(error);\n                this.submitting = false;\n                this.$dispatch(TOAST_TRIGGER, { msg: error, level: ToastError });\n            }\n        },\n\n        async addShipmentDetails(e: SubmitEvent) {\n            const data = new FormData(e.target as HTMLFormElement);\n            const newShipment = Object.fromEntries(data.entries());\n\n            const shipmentDetails = {\n                cif: this.presale?.cif,\n                dup: this.presale?.dup,\n                ...newShipment,\n            } as PresaleShippingDetails;\n\n            this.submitting = true;\n            try {\n                const r = await fetch(\n                    url(`isiWeb/web/v1/empresas/01/presuntos/${this.$params.pre}/direcciones-envio`),\n                    {\n                        credentials: 'include',\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify(shipmentDetails),\n                    },\n                );\n\n                if (!r.ok) {\n                    const response = await r.json();\n                    throw new Error(this.$t(response.message));\n                }\n\n                await this.loadShippingDetails();\n                this.modalShipmentAdd?.hide();\n                this.$dispatch(TOAST_TRIGGER, { msg: 'Dirección de envío añadida', level: ToastSuccess });\n            } catch (error: any) {\n                console.error(error);\n                this.$dispatch(TOAST_TRIGGER, { msg: error, level: ToastError });\n            }\n            this.submitting = false;\n        },\n\n        async editShipmentDetails(e: SubmitEvent) {\n            const data = new FormData(e.target as HTMLFormElement);\n            const editedShipment = Object.fromEntries(data.entries());\n\n            try {\n                this.submitting = true;\n                const r = await fetch(\n                    url(\n                        `isiWeb/web/v1/empresas/01/presuntos/${this.$params.pre}/direcciones-envio/${this.currentShipmentDetails.nroenv}`,\n                    ),\n                    {\n                        credentials: 'include',\n                        method: 'PUT',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({\n                            ...this.currentShipmentDetails,\n                            ...editedShipment,\n                        } as PresaleShippingDetails),\n                    },\n                );\n\n                if (!r.ok) {\n                    const response = await r.json();\n                    throw new Error(this.$t(response.message));\n                }\n\n                await this.loadShippingDetails();\n                this.currentShipmentDetails = EmptyShipmentDetails;\n                this.modalShipmentEdit?.hide();\n                this.submitting = false;\n                this.$dispatch(TOAST_TRIGGER, { msg: 'Dirección de envío actualizada', level: ToastSuccess });\n            } catch (error: any) {\n                console.error(error);\n                this.submitting = false;\n                this.$dispatch(TOAST_TRIGGER, { msg: error, level: ToastError });\n            }\n        },\n\n        async validatePresale() {\n            this.submitting = true;\n            const validationDate = `${new Date().getFullYear()}-${new Date().getMonth() + 1}-${new Date().getDate()}`;\n            try {\n                const r = await fetch(url(`isiWeb/web/v1/empresas/01/presuntos/${this.$params.pre}`), {\n                    credentials: 'include',\n                    method: 'PUT',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        ...this.presale,\n                        conf: true,\n                        fecconf: validationDate,\n                        usuconf: this.user?.usuario,\n                    } as Presale),\n                });\n\n                if (!r.ok) {\n                    const response = await r.json();\n                    throw new Error(this.$t(response.message));\n                }\n\n                const response = await r.json();\n\n                this.modalValidatePresale?.hide();\n                this.submitting = false;\n                this.$router.navigate('/potencial/list');\n                this.$dispatch(TOAST_TRIGGER, { msg: response.message, level: ToastSuccess });\n            } catch (error: any) {\n                console.error(error);\n                this.submitting = false;\n                this.$dispatch(TOAST_TRIGGER, { msg: error, level: ToastError });\n            }\n        },\n\n        async deleteShipmentDetail(shipmentDetail: PresaleShippingDetails) {\n            this.submitting = true;\n            try {\n                const r = await fetch(\n                    url(\n                        `isiWeb/web/v1/empresas/01/presuntos/${this.$params.pre}/direcciones-envio/${shipmentDetail.nroenv}`,\n                    ),\n                    {\n                        credentials: 'include',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        method: 'DELETE',\n                    },\n                );\n\n                if (!r.ok) {\n                    const response = await r.json();\n                    throw new Error(this.$t(response.message));\n                }\n\n                await this.loadShippingDetails();\n                this.currentShipmentDetails = EmptyShipmentDetails;\n\n                this.modalShipmentDelete?.hide();\n                this.$dispatch(TOAST_TRIGGER, { msg: 'Dirección de envío eliminada', level: ToastSuccess });\n            } catch (error: any) {\n                console.log('error', error);\n                this.$dispatch(TOAST_TRIGGER, { msg: error, level: ToastError });\n            }\n            this.submitting = false;\n        },\n\n        async loadPresale() {\n            try {\n                const r = await fetch(url(`isiWeb/web/v1/empresas/01/presuntos/${this.$params.pre}`), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading presale'));\n                }\n\n                this.presale = response.data as Presale;\n                this.codposText = this.presale.codpos;\n                this.editedPresale = { ...this.presale };\n                await this.loadProvincias();\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadProvincias() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/provincias'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading provincias'));\n                }\n\n                this.provincias = response.data as Provincia[];\n\n                if (!this.presale?.pro) {\n                    this.provinciaSelected = '';\n                }\n\n                if (this.presale?.pro) {\n                    const provincia = this.provincias.find((p: Provincia) => p.pro === this.presale?.pro);\n                    this.provinciaSelected = provincia?.pro;\n\n                    if (provincia) {\n                        await this.loadPoblaciones(provincia.pro);\n                    }\n                }\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async assignPoblacionProvincia() {\n            console.log('entramos');\n            try {\n                const r = await fetch(url(`/isiWeb/web/v1/poblaciones?codpos=${this.codposText}`), {\n                    credentials: 'include',\n                    method: 'GET',\n                });\n                if (!r.ok) {\n                    throw new Error(r.statusText);\n                }\n                const response = await r.json();\n                const poblaciones = response.data as Poblacion[];\n                const poblacionPro = poblaciones[0].pro;\n                if (this.provinciaSelected !== poblacionPro) {\n                    this.provinciaSelected = poblacionPro;\n                    this.editedPresale.prodes = this.provincias.find((p: Provincia) => p.pro === poblacionPro)?.prodes;\n                    await this.loadPoblaciones(this.provinciaSelected);\n                }\n                this.poblacionSelected = poblaciones.find((p: Poblacion) => p.codpos === this.codposText)?.pob;\n            } catch (error: any) {\n                this.$dispatch(TOAST_TRIGGER, { msg: error.message, level: ToastError });\n                console.error(error);\n            }\n        },\n\n        loadPoblacionCodpos() {\n            const newCodpos = this.poblaciones.find((p: Poblacion) => p.pob === this.poblacionSelected)?.codpos;\n            if (newCodpos) {\n                this.codposText = newCodpos;\n            }\n        },\n\n        async loadPoblaciones(provinciaPro: string) {\n            try {\n                const r = await fetch(url(`isiWeb/web/v1/poblaciones?pro=${provinciaPro}`), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading poblaciones'));\n                }\n\n                this.poblaciones = response.data as Poblacion[];\n                if (!this.presale?.pob) {\n                    this.poblacionSelected = '';\n                }\n                if (this.presale?.pob && !this.poblacionSelected) {\n                    this.poblacionSelected = this.presale?.pob;\n                }\n                const targetPoblacion = this.poblaciones.find((p: Poblacion) => p.codpos === this.codposText);\n                if (this.poblacionSelected !== '' && targetPoblacion?.codpos !== this.codposText) {\n                    this.poblacionSelected = this.poblaciones[0].pob;\n                    this.codposText = this.poblaciones[0].codpos;\n                }\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadIvas() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/ivas'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading ivas'));\n                }\n\n                this.ivas = response.data as PresaleIva[];\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadPaymentModes() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/empresas/01/modos-pago'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading payment modes'));\n                }\n\n                this.modosPago = response.data as PresalePaymentMode[];\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadPaymentDays() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/empresas/01/dias-pago'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading payment days'));\n                }\n\n                this.diasPago = response.data as PresalePaymentDay[];\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadCountries() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/paises'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading countries'));\n                }\n\n                this.paises = response.data as PresaleCountry[];\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadClientTypes() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/empresas/01/tipos-cliente'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading client types'));\n                }\n\n                this.tiposCliente = response.data as PresaleClientType[];\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadZones() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/empresas/01/zonas'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading zones'));\n                }\n\n                this.zonas = response.data as PresaleZone[];\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadCompanyTypes() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/tipos-empresa'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading company types'));\n                }\n\n                this.tiposEmpresa = response.data as PresaleCompanyType[];\n                if (this.presale?.tpemp) {\n                    this.tpempSelected = this.presale?.tpemp;\n                }\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadActivities() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/actividades'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading activities'));\n                }\n\n                this.actividades = response.data as PresaleActivity[];\n                if (this.presale['acti[1]']) {\n                    this.actividadSelected = this.presale['acti[1]'];\n                }\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadSellers() {\n            try {\n                const r = await fetch(url('isiWeb/web/v1/empresas/01/vendedores'), {\n                    credentials: 'include',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                });\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading sellers'));\n                }\n\n                this.vendedores = response.data as Vendedor[];\n                this.cobradores = { ...this.vendedores };\n            } catch (error: any) {\n                console.error(error);\n            }\n        },\n\n        async loadShippingDetails() {\n            this.loadingPresaleShipmentDetails = true;\n            try {\n                const r = await fetch(\n                    url(`isiWeb/web/v1/empresas/01/presuntos/${this.$params.pre}/direcciones-envio`),\n                    {\n                        credentials: 'include',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        method: 'GET',\n                    },\n                );\n\n                const response = await r.json();\n\n                if (!r.ok) {\n                    throw new Error(this.$t('Error loading shipping details'));\n                }\n\n                this.direccionesEnvio = response.data as PresaleShippingDetails[];\n            } catch (error: any) {\n                console.error(error);\n            }\n            this.loadingPresaleShipmentDetails = false;\n        },\n    }),\n} as ComponentModule;\n"],"file":"assets/presale-edit-DR1DpPJf.js"}